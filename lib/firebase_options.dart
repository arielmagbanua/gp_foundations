// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    // get the API keys
    final webAPIKey = dotenv.get('WEB_API_KEY');
    final androidAPIKey = dotenv.get('ANDROID_API_KEY');
    final iosAPIKey = dotenv.get('IOS_API_KEY');

    if (kIsWeb) {
      return web(webAPIKey);
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android(androidAPIKey);
      case TargetPlatform.iOS:
        return ios(iosAPIKey);
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web(String key) {
    return FirebaseOptions(
      apiKey: key,
      appId: '1:386568347764:web:f36ff2543bb97b7202b121',
      messagingSenderId: '386568347764',
      projectId: 'gpdavao',
      authDomain: 'gpdavao.firebaseapp.com',
      databaseURL: 'https://gpdavao.firebaseio.com',
      storageBucket: 'gpdavao.appspot.com',
      measurementId: 'G-LG8R9L8CJQ',
    );
  }

  static FirebaseOptions android(String key) {
    return FirebaseOptions(
      apiKey: key,
      appId: '1:386568347764:android:75e62759b42d90a602b121',
      messagingSenderId: '386568347764',
      projectId: 'gpdavao',
      databaseURL: 'https://gpdavao.firebaseio.com',
      storageBucket: 'gpdavao.appspot.com',
    );
  }

  static FirebaseOptions ios(String key) {
    return FirebaseOptions(
      apiKey: key,
      appId: '1:386568347764:ios:13d6ed719acd036502b121',
      messagingSenderId: '386568347764',
      projectId: 'gpdavao',
      databaseURL: 'https://gpdavao.firebaseio.com',
      storageBucket: 'gpdavao.appspot.com',
      iosClientId:
          '386568347764-k5frm3k7i01aslp9f5skr42lvdqjqjdn.apps.googleusercontent.com',
      iosBundleId: 'org.growpointchurch.foundations.gpFoundations',
    );
  }
}
